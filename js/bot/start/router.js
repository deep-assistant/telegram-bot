import { helpText, helpCommand, appCommand } from '../commands.js';
import { checkSubscription } from '../gpt/utils.js';
import { createMainKeyboard, sendMessage } from '../main_keyboard.js';
import { tokenizeService, referralsService } from '../../services/index.js';

import { Composer, InlineKeyboard } from 'grammy';
import createDebug from 'debug';
const debug = createDebug('telegram-bot:start_router');

// Greeting text moved to locales/en.yml & ru.yml under key "start.greeting"

const refText = `üëã –¢—ã –ø—Ä–∏–±—ã–ª –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–æ–π –∫–∞–Ω–∞–ª.`;

async function handleReferral(ctx, userId, refUserId) {
  const result = await referralsService.createReferral(userId, refUserId);
  console.log(result, 'resuuuuult');
  if (!refUserId) return;
  if (!result || result.parent == null) return;

  let chatId;
  try { chatId = parseInt(refUserId, 10); } catch { chatId = null; }
  if (!chatId) {
    await sendMessage(ctx, '‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID.');
    return;
  }

  await sendMessage(ctx, `üéâ –í—ã –ø–æ–ª—É—á–∏–ª–∏ *5 000*‚ö°Ô∏è!\n\n/balance - ‚ú® –£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å\n/referral - üîó –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∏`);

  await ctx.api.sendMessage(chatId, `üéâ –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª! \n–í—ã –ø–æ–ª—É—á–∏–ª–∏ *5 000*‚ö°Ô∏è!\n–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª –¥–æ–ª–∂–µ–Ω –ø—Ä–æ—è–≤–∏—Ç—å –ª—é–±—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –±–æ—Ç–µ —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞, —á—Ç–æ–±—ã –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –µ—â–µ *5 000*‚ö°Ô∏è –∏ +500‚ö°Ô∏èÔ∏è –∫ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é –±–∞–ª–∞–Ω—Å–∞.\n\n/balance - ‚ú® –£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å\n/referral - üîó –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∏`);
}

async function createTokenIfNotExist(userId) {
  return await tokenizeService.get_tokens(userId);
}

export const startRouter = new Composer();

startRouter.command('start', async (ctx) => {
  debug('Start command handler triggered');
  const refUserId = ctx.match;

  const keyboard = createMainKeyboard();
  const greeting = ctx.t ? ctx.t('start.greeting') : '–ü—Ä–∏–≤–µ—Ç!';
  await sendMessage(ctx, { text: greeting, reply_markup: keyboard });

  await createTokenIfNotExist(ctx.from.id);
  const isSubscribe = await checkSubscription(ctx);

  if (refUserId) {
    let chatId = null;
    try { chatId = parseInt(refUserId, 10); } catch {}
    if (chatId) {
      const userName = ctx.from.username;
      const fullName = ctx.from.first_name + (ctx.from.last_name ? ' ' + ctx.from.last_name : '');
      const mention = `<a href='tg://user?id=${ctx.from.id}'>${fullName}</a>`;
      await ctx.api.sendMessage(chatId, `üéâ –ü–æ –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –ø–µ—Ä–µ—à–ª–∏: @${userName} (${mention}).\n\n–ß—Ç–æ–±—ã –≤–∞—à–µ–º—É –¥—Ä—É–≥—É —Å—Ç–∞—Ç—å –≤–∞—à–∏–º —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º, –æ–Ω –¥–æ–ª–∂–µ–Ω –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª @gptDeep.\n\n–ö–∞–∫ —Ç–æ–ª—å–∫–æ —ç—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –≤—ã –ø–æ–ª—É—á–∏—Ç–µ <b>5 000</b>‚ö°Ô∏è –µ–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–æ –∏ <b>+500</b>‚ö°Ô∏èÔ∏è –∫ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é –±–∞–ª–∞–Ω—Å–∞.\n\n–ï—Å–ª–∏ –≤–¥—Ä—É–≥ —ç—Ç–æ–≥–æ –¥–æ–ª–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, —Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ –≤–∞—à–µ–º—É –¥—Ä—É–≥—É –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, <b>–ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –µ–º—É –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è</b>.\n–ï—Å–ª–∏ –∏ —ç—Ç–æ –Ω–µ –ø–æ–º–æ–≥–∞–µ—Ç, —Ç–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ @deepGPT –∏ –º—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —Å–∏—Ç—É–∞—Ü–∏–µ–π.`, { parse_mode: 'HTML' });
    }
  }

  if (!isSubscribe) {
    if (String(refUserId) !== String(ctx.from.id)) {
      const inlineKb = new InlineKeyboard()
        .url('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è üëäüèª', 'https://t.me/gptDeep').row()
        .text('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å ‚úÖ', `ref-is-subscribe ${refUserId} ${ctx.from.id}`);
      await sendMessage(ctx, refText, { reply_markup: inlineKb });
    }
    return;
  }

  await handleReferral(ctx, ctx.from.id, refUserId);
});

startRouter.callbackQuery(/ref-is-subscribe (\S+) (\S+)/, async (ctx) => {
  const refUserId = ctx.match[1];
  const userId = ctx.match[2];
  const isSubscribe = await checkSubscription(ctx.message, userId);
  if (!isSubscribe) {
    await sendMessage(ctx, '–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å! üò°');
    return;
  }
  await handleReferral(ctx, userId, refUserId);
});

startRouter.hears([helpCommand(), helpText()], async (ctx) => {
  await sendMessage(ctx, `–û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ—Å—É—Äc –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π - ‚ö°Ô∏è (—ç–Ω–µ—Ä–≥–∏—è).\n–≠—Ç–æ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ä–µ—Å—É—Ä—Å –¥–ª—è –≤—Å–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞.\n\n–ö–∞–∂–¥–∞—è –Ω–µ–π—Ä–æ—Å–µ—Ç—å —Ç—Ä–∞—Ç–∏—Ç —Ä–∞–∑–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ‚ö°Ô∏è.\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö ‚ö°Ô∏è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –¥–ª–∏–Ω—ã –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞, –º–æ–¥–µ–ª–µ–π –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π –∏ –æ–±—ä—ë–º–∞ –≤–∞—à–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏.\n–î–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É - /clear, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–ø–æ–ª–Ω—è—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –∏ –Ω–µ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å —Ä–∞—Å—Ö–æ–¥ ‚ö°Ô∏è (—ç–Ω–µ—Ä–≥–∏–∏)! \n–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—á–∏—â–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –æ–±—Å—É–∂–¥–µ–Ω–∏—è –Ω–æ–≤–æ–π —Ç–µ–º—ã. –ê —Ç–∞–∫–∂–µ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –Ω–∞—á–∞–ª–∞ –æ—Ç–∫–∞–∑—ã–≤–∞—Ç—å –≤ –ø–æ–º–æ—â–∏.\n\n/app - üî• –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é!\n/start - üîÑ –†–µ—Å—Ç–∞—Ä—Ç –±–æ—Ç–∞, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç, –ø–æ–º–æ–≥–∞–µ—Ç –æ–±–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏.\n/model - üõ†Ô∏è –°–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç, –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å –±–æ—Ç–∞.\n/system - ‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–º–µ–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º.   \n/clear - üßπ –û—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç, –ø–æ–º–æ–≥–∞–µ—Ç –∑–∞–±—ã—Ç—å –±–æ—Ç—É –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é.  \n/balance - ‚ú® –ë–∞–ª–∞–Ω—Å, –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å ‚ö°Ô∏è.\n/image - üñºÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ (Midjourney, DALL¬∑E 3, Flux, Stable Diffusion)\n/buy - üíé –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å, –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å ‚ö°Ô∏è.\n/referral - üîó –ü–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É\n/suno - üéµ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º—É–∑—ã–∫–∏ (Suno)\n/text - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ`);
});

startRouter.hears(appCommand(), async (ctx) => {
  await sendMessage(ctx, '–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: https://t.me/DeepGPTBot/App');
});
