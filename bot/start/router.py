import re

from aiogram import types, Router
from aiogram.filters import CommandStart
from aiogram.types import CallbackQuery, Message

from bot.filters import StartWithQuery
from bot.filters import TextCommand
from bot.commands import help_text, help_command, app_command
from bot.gpt.utils import check_subscription
from bot.main_keyboard import create_main_keyboard, send_message
from services import tokenizeService, referralsService

startRouter = Router()

hello_text = """
üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ deep.foundation!

ü§ñ –Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å –ª—é–±–æ–π –∑–∞–¥–∞—á–µ–π, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é!

/help - ‚ú® –æ–±–∑–æ—Ä –∫–æ–º–∞–Ω–¥ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
/balance - ‚ö°Ô∏è —É–∑–Ω–∞—Ç—å —Å–≤–æ–π –±–∞–ª–∞–Ω—Å
/referral - üîó –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∏

–í—Å—ë –±–µ—Å–ø–ª–∞—Ç–Ω–æ, –µ—Å–ª–∏ –Ω–µ –ø–ª–∞—Ç–∏—Ç—å.
–ö–∞–∂–¥—ã–π –¥–µ–Ω—å —Ç–≤–æ–π –±–∞–ª–∞–Ω—Å –±—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω—è—Ç—å—Å—è –Ω–∞ —Å—É–º–º—É –æ—Ç *10 000‚ö°Ô∏è* (—ç–Ω–µ—Ä–≥–∏–∏)!

–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ:
üíé –ú–æ–∂–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å Telegram –∑–≤—ë–∑–¥–∞–º–∏ –∏–ª–∏ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π.
üë• –ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å? –ü–æ–¥–µ–ª–∏—Å—å —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –ø–æ–ª—É—á–∏ –±–æ–Ω—É—Å –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞! –ü—Ä–∏–≤–æ–¥—è –º–Ω–æ–≥–æ –¥—Ä—É–∑–µ–π —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ.

/referral - –ø–æ–ª—É—á–∞–π –±–æ–ª—å—à–µ —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π:
*5 000‚ö°Ô∏èÔ∏è* –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è;
*+500‚ö°Ô∏èÔ∏è* –∫ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é –±–∞–ª–∞–Ω—Å–∞ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞.

üè† –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –∏–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ–º, –Ω–∞–ø–∏—à–∏ –≤ –Ω–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ @deepGPT.
"""

ref_text = """
üëã –¢—ã –ø—Ä–∏–±—ã–ª –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–æ–π –∫–∞–Ω–∞–ª.
"""

async def handle_referral(message, user_id, ref_user_id):
    result = await referralsService.create_referral(user_id, ref_user_id)
    
    print(result, 'resuuuuult')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ ref_user_id –≤–∞–ª–∏–¥–µ–Ω –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏—è
    if not ref_user_id:
        return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ ref_user_id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    
    if not result or result.get("parent") is None:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ ref_user_id - —á–∏—Å–ª–æ –∏–ª–∏ —Å—Ç—Ä–æ–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, username)
    try:
        chat_id = int(ref_user_id)  # –ï—Å–ª–∏ ref_user_id –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º
    except (TypeError, ValueError):
        await message.answer("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID.")
        return
    
    await message.answer(text="""
üéâ –í—ã –ø–æ–ª—É—á–∏–ª–∏ *5 000*‚ö°Ô∏è!

/balance - ‚ú® –£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å
/referral - üîó –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∏
""")

    await message.bot.send_message(
        chat_id=chat_id,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π chat_id
        text="""
üéâ –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª! 
–í—ã –ø–æ–ª—É—á–∏–ª–∏ *5 000*‚ö°Ô∏è!
–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª –¥–æ–ª–∂–µ–Ω –ø—Ä–æ—è–≤–∏—Ç—å –ª—é–±—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –±–æ—Ç–µ —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞, —á—Ç–æ–±—ã –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –µ—â–µ *5 000*‚ö°Ô∏è –∏ +500‚ö°Ô∏èÔ∏è –∫ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é –±–∞–ª–∞–Ω—Å–∞.

/balance - ‚ú® –£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å
/referral - üîó –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∏
"""
    )


async def create_token_if_not_exist(user_id):
    return await tokenizeService.get_tokens(user_id)

@startRouter.message(CommandStart())
async def start(message: types.Message):
    args_match = re.search(r'^/start\s(\S+)', message.text)
    ref_user_id = args_match.group(1) if args_match else None

    # always force sending the keyboard
    keyboard = create_main_keyboard()
    await send_message(message, text=hello_text, reply_markup=keyboard)

    is_subscribe = await check_subscription(message)

    await create_token_if_not_exist(message.from_user.id)

    if not is_subscribe:
        if str(ref_user_id) == str(message.from_user.id):
            return

        await message.answer(
            text=ref_text,
            reply_markup=types.InlineKeyboardMarkup(
                resize_keyboard=True,
                inline_keyboard=[
                    [
                        types.InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è üëäüèª", url="https://t.me/gptDeep"),
                    ],
                    [
                        types.InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å ‚úÖ",
                                                   callback_data=f"ref-is-subscribe {ref_user_id} {message.from_user.id}"),
                    ]
                ]
            )
        )

        return

    await handle_referral(message, message.from_user.id, ref_user_id)


@startRouter.callback_query(StartWithQuery("ref-is-subscribe"))
async def handle_ref_is_subscribe_query(callback_query: CallbackQuery):
    ref_user_id = callback_query.data.split(" ")[1]
    user_id = callback_query.data.split(" ")[2]

    is_subscribe = await check_subscription(callback_query.message, user_id)

    if not is_subscribe:
        await callback_query.message.answer(text="–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å! üò°")
        return

    await handle_referral(callback_query.message, user_id, ref_user_id)


@startRouter.message(TextCommand([help_command(), help_text()]))
async def help_command(message: types.Message):
    await message.answer(text="""
–û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ—Å—É—Äc –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º - ‚ö°Ô∏è (—ç–Ω–µ—Ä–≥–∏—è).
–≠—Ç–æ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ä–µ—Å—É—Ä—Å –¥–ª—è –≤—Å–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞.

–ö–∞–∂–¥–∞—è –Ω–µ–π—Ä–æ—Å–µ—Ç—å —Ç—Ä–∞—Ç–∏—Ç —Ä–∞–∑–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ‚ö°Ô∏è.
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö ‚ö°Ô∏è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –¥–ª–∏–Ω—ã –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞, –º–æ–¥–µ–ª–µ–π –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π –∏ –æ–±—ä—ë–º–∞ –≤–∞—à–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏.
–î–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É - /clear, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–ø–æ–ª–Ω—è—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –∏ –Ω–µ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å —Ä–∞—Å—Ö–æ–¥ ‚ö°Ô∏è (—ç–Ω–µ—Ä–≥–∏–∏)! 
–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—á–∏—â–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –æ–±—Å—É–∂–¥–µ–Ω–∏—è –Ω–æ–≤–æ–π —Ç–µ–º—ã. –ê —Ç–∞–∫–∂–µ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –Ω–∞—á–∞–ª–∞ –æ—Ç–∫–∞–∑—ã–≤–∞—Ç—å –≤ –ø–æ–º–æ—â–∏.

/app - üî• –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é!
/start - üîÑ –†–µ—Å—Ç–∞—Ä—Ç –±–æ—Ç–∞, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç, –ø–æ–º–æ–≥–∞–µ—Ç –æ–±–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏.
/model - üõ†Ô∏è –°–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç, –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å –±–æ—Ç–∞.
/system - ‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–º–µ–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º.   
/clear - üßπ –û—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç, –ø–æ–º–æ–≥–∞–µ—Ç –∑–∞–±—ã—Ç—å –±–æ—Ç—É –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é.  
/balance - ‚ú® –ë–∞–ª–∞–Ω—Å, –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å ‚ö°Ô∏è.
/image - üñºÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ (Midjourney, DALL¬∑E 3, Flux, Stable Diffusion)
/buy - üíé –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å, –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å ‚ö°Ô∏è.
/referral - üîó –ü–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
/suno - üéµ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º—É–∑—ã–∫–∏ (Suno)
/text - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
""")


@startRouter.message(TextCommand([app_command()]))
async def app_handler(message: Message):
    await message.answer("""–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: https://t.me/DeepGPTBot/DeepGPT""")
